JSP Implicit Objects
Implicit objects are a set of Java objects that the JSP Container makes available to developers on each page. These objects may be accessed as built-in variables via scripting elements and can also be accessed programmatically by JavaBeans and Servlets.

There are 9 jsp implicit objects. These objects are created by the web container that are available to all the jsp pages.

 A list of the 9 implicit objects is given below:
Object	    Type
out         JspWriter
request	    HttpServletRequest
response	HttpServletResponse
config	    ServletConfig
application	ServletContext
session	    HttpSession
pageContext	PageContext
page	    Object
exception	Throwable

1) JSP out implicit object

For writing any data to the buffer, JSP provides an implicit object named out. It is the object of JspWriter. In case of servlet you need to write:

    PrintWriter out=response.getWriter();  

But in JSP, you don't need to write this code. 

e.g:
index.jsp

    <html>  
    <body>  
    <% out.print("Today is:"+java.util.Calendar.getInstance().getTime()); %>  
    </body>  
    </html>

JSP request implicit object

The JSP request is an implicit object of type HttpServletRequest i.e. created for each jsp request by the web container. It can be used to get request information such as parameter, header information, remote address, server name, server port, content type, character encoding etc.

It can also be used to set, get and remove attributes from the jsp request scope.

Example of JSP request implicit object
index.html

    <form action="welcome.jsp">  
    <input type="text" name="uname">  
    <input type="submit" value="go"><br/>  
    </form>  

welcome.jsp

    <%   
    String name=request.getParameter("uname");  
    out.print("welcome "+name);  
    %>

JSP response implicit object

In JSP, response is an implicit object of type HttpServletResponse. The instance of HttpServletResponse is created by the web container for each jsp request.

It can be used to add or manipulate response such as redirect response to another resource, send error etc.

index.html

    <form action="welcome.jsp">  
    <input type="text" name="uname">  
    <input type="submit" value="go"><br/>  
    </form>  

welcome.jsp

    <%   
    response.sendRedirect("http://www.google.com");  
    %> 

JSP config implicit object

In JSP, config is an implicit object of type ServletConfig. This object can be used to get initialization parameter for a particular JSP page. The config object is created by the web container for each jsp page.

Generally, it is used to get initialization parameter from the web.xml file.

web.xml file

    <web-app>  
      
    <servlet>  
    <servlet-name>sonoojaiswal</servlet-name>  
    <jsp-file>/welcome.jsp</jsp-file>  
      
    <init-param>  
    <param-name>dname</param-name>  
    <param-value>sun.jdbc.odbc.JdbcOdbcDriver</param-value>  
    </init-param>  
      
    </servlet>  
      
    <servlet-mapping>  
    <servlet-name>sonoojaiswal</servlet-name>  
    <url-pattern>/welcome</url-pattern>  
    </servlet-mapping>  
      
    </web-app>  

welcome.jsp

    <%   
    out.print("Welcome "+request.getParameter("uname"));  
      
    String driver=config.getInitParameter("dname");  
    out.print("driver name is="+driver);  
    %>  

JSP application implicit object

In JSP, application is an implicit object of type ServletContext.

The instance of ServletContext is created only once by the web container when application or project is deployed on the server.

This object can be used to get initialization parameter from configuaration file (web.xml). It can also be used to get, set or remove attribute from the application scope.

This initialization parameter can be used by all jsp pages.

web.xml file

    <web-app>  
      
    <servlet>  
    <servlet-name>sonoojaiswal</servlet-name>  
    <jsp-file>/welcome.jsp</jsp-file>  
    </servlet>  
      
    <servlet-mapping>  
    <servlet-name>sonoojaiswal</servlet-name>  
    <url-pattern>/welcome</url-pattern>  
    </servlet-mapping>  
      
    <context-param>  
    <param-name>dname</param-name>  
    <param-value>sun.jdbc.odbc.JdbcOdbcDriver</param-value>  
    </context-param>  
      
    </web-app>  

welcome.jsp

    <%   
      
    out.print("Welcome "+request.getParameter("uname"));  
      
    String driver=application.getInitParameter("dname");  
    out.print("driver name is="+driver);  
      
    %>

Session implicit object:

In JSP, session is an implicit object of type HttpSession.The Java developer can use this object to set,get or remove attribute or to get session information.

welcome.jsp

    <html>  
    <body>  
    <%   
      
    String name=request.getParameter("uname");  
    out.print("Welcome "+name);  
      
    session.setAttribute("user",name);  
      
    <a href="second.jsp">second jsp page</a>  
      
    %>  
    </body>  
    </html>  

second.jsp

    <html>  
    <body>  
    <%   
      
    String name=(String)session.getAttribute("user");  
    out.print("Hello "+name);  
      
    %>  
    </body>  
    </html> 

pageContext implicit object:

In JSP, pageContext is an implicit object of type PageContext class.The pageContext object can be used to set,get or remove attribute from one of the following scopes:

    page
    request
    session
    application

In JSP, page scope is the default scope.

welcome.jsp

    <html>  
    <body>  
    <%   
      
    String name=request.getParameter("uname");  
    out.print("Welcome "+name);  
      
    pageContext.setAttribute("user",name,PageContext.SESSION_SCOPE);  
      
    <a href="second.jsp">second jsp page</a>  
      
    %>  
    </body>  
    </html>  

second.jsp

    <html>  
    <body>  
    <%   
      
    String name=(String)pageContext.getAttribute("user",PageContext.SESSION_SCOPE);  
    out.print("Hello "+name);  
      
    %>  
    </body>  
    </html>

page implicit object:
In JSP, page is an implicit object of type Object class.This object is assigned to the reference of auto generated servlet class. 

It is written as:
Object page=this;

For using this object it must be cast to Servlet type.

For example:<% (HttpServlet)page.log("message"); %>

Since, it is of type Object it is less used because you can use this object directly in jsp.
For example:
<% this.log("message"); %>

exception implicit object:

In JSP, exception is an implicit object of type java.lang.Throwable class. This object can be used to print the exception. But it can only be used in error pages.It is better to learn it after page directive.

error.jsp

    <%@ page isErrorPage="true" %>  
    <html>  
    <body>  
      
    Sorry following exception occured:<%= exception %>  
      
    </body>  
    </html>