Abstraction is a process of hiding the implementation details and showing only functionality to the user.

There are two ways to achieve abstraction in java:
1. Abstract class 
2. Interface

Abstract Class in Java:
-- A class which is declared with the keyword is known as an abstract class in Java.
-- It can have abstract and non-abstract methods.
-- It cannot be instantiated.
-- It can have constructors and static methods also.
-- It can have final methods which will force the subclass not to change the body of the method.
-- If we want to avoid object creation of the class then we declared it as abstract.
-- If you are extending an abstract class that has an abstract method, you must either provide the implementation of the method or make this class abstract.
-- The abstract class can also be used to provide some implementation of the interface.
Example : abstract class a{}

Abstract method : A method which is declared as abstract and does not have implementation .
-- If it is applied to a method it indicates that it will have no body and code can be run when implemented in a sub class.
-- If there is an abstract method in a class , that class must be abstract.
Example : abstract void printStatus();



****NOTE : A factory method is a method that returns the instance of the class.