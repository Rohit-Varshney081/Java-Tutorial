Q> Can you save a Java source file by another name than the class name?
A> Yes, if the class is not public.

Q> Why char uses 2 byte in java and what is \u0000 ?
A> It is because java uses Unicode system not ASCII code system. The \u0000 is the lowest range of Unicode system. 

Q> Difference between >> & >>>(Zero fill right shift operator)
A> For positive both works same as right shift.
   For negative >>> chnages parity bit (MSB) to 0.

Q> Why does adding two short variables together and assigning the result to another short variable cause a compile-time error in Java? How can this error be resolved?
A> When performing arithmetic operations on short data types in Java, the result is automatically promoted to an int by default.
   This means that when you add two short variables together (a + b), the result is an int.
   Trying to directly assign this int value to a short variable (a = a + b;) causes a compile-time error due to potential loss of precision.
   To resolve this error, you can explicitly cast the result back to a short type, like so:
   a = (short) (a + b);

Q> Why is the Java main method static?

A> It is because the object is not required to call a static method. If it were a non-static method, JVM creates an object first then call main() method that will lead the problem of extra memory allocation.

Q> Are Java comments executable?
A> As we know, Java comments are not executed by the compiler or interpreter,
   however, before the lexical transformation of code in compiler,
   contents of the code are encoded into ASCII in order to make the processing easy.
   
    public class Test{  
        public static void main(String[] args) {  
            //the below comment will be executed  
            // \u000d System.out.println("Java comment is executed!!");  
        }  
    }

    In Java, \u000d is the Unicode representation for the carriage return character (CR), which typically moves the cursor to the beginning of the current line.
    When the compiler encounters \u000d, it interprets it as a line terminator, effectively ending the current line of code.

Q> What is the purpose of a default constructor?
A> The default constructor is used to provide the default values to the object like 0, null, etc., depending on the type
Q>  Why multiple inheritance is not supported in java?
A> To reduce the complexity and simplify the language, multiple inheritance is not supported in java.

Q> Why compile-time error is better than runtime error ?
A> Compile-time errors are generally considered better than runtime errors for several reasons:
    -Early Detection
    -Prevents Deployment
    -Predictability
    -Ease of Debugging
    -Reduced Risk
    -Improved Code Quality

    Since compile-time errors are better than runtime errors, Java renders compile-time error if you inherit 2 classes. So whether you have same method or different, there will be compile time error (i.e. class in JAVA cannot have more than one super class).

Q> What is constructor chaining ?
A> It is a technique of calling another constructor from a constructor.
   this() is used to call same class constructor.
   super() is used to call super class constructor.

Q> Why Method Overloading is not possible by changing the return type of method only?
A> In java, method overloading is not possible by changing the return type of the method only because of ambiguity. Method overloading in Java is based on the method signature, which includes the method name and parameter types.
    class Adder{  
        static int add(int a,int b){return a+b;}  
        static double add(int a,int b){return a+b;}  
        }  
        class TestOverloading3{  
            public static void main(String[] args){  
            System.out.println(Adder.add(11,11));//ambiguity  
    }}

Q> Why can we not override static method?
A> It is because the static method is bound with class whereas instance method is bound with an object. Static belongs to the class area, and an instance belongs to the heap area.

Q> What is the class name of Java array?
A> In Java, an array is an object. For array object, a proxy class is created whose name can be obtained by getClass().getName() method on the object.

Q> Multiple inheritance is not supported through class in java, but it is possible by an interface, why?
A> As we have explained in the inheritance chapter, multiple inheritance is not supported in the case of class because of ambiguity. However, it is supported in case of an interface because there is no ambiguity. It is because its implementation is provided by the implementation class.

Q> What is marker or tagged interface?
A> An interface which has no member is known as a marker or tagged interface, for example, Serializable, Cloneable, Remote, etc. They are used to provide some essential information to the JVM so that JVM may perform some useful operation.
    //How Serializable interface is written?  
    public interface Serializable{  
    } 

Q> Can we define a class inside the interface?
A> Yes, if we define a class inside the interface, the Java compiler creates a static nested class. 

Q> What is the difference between import and static import?
A> The import allows the java programmer to access classes of a package without package qualification whereas the static import feature allows to access the static members of a class without the class qualification. The import provides accessibility to classes and interface whereas static import provides accessibility to static members of the class.
    import static java.lang.System.*;    
    class StaticImportExample{  
        public static void main(String args[]){  
     
            out.println("Hello");//Now no need of System.out  
            out.println("Java");  
  
        }   
    }   

Q> How to put two public classes in a package?
A> If you want to put two public classes in a package, have two java source files containing one public class, but keep the package name same. 