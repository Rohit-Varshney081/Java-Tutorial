Polymorphism means an ability to have more than one form and behaving differently in different conditions.
Example : + Operator (performs addition as well as concatenation)

Types of Polymorphism:
    1.Static Polymorphism (Compile-time Polymorphism)       -  also known as Early Binding and achieved by Method overloading
    2.Dynamic Polymorphism(Run-time Polymorphism)           -  achieved by method overriding

Method Overloading : If a class has multiple methods having same name but different in parameters, it is known as Method Overloading.
                     > 	Method overloading is used to increase the readability of the program.

There are two ways to overload the method in java :
    1.By changing number of arguments
    2.By changing the data type


Method Overriding : If subclass (child class) has the same method as declared in the parent class, it is known as method overriding in Java. 
                    An instance method in a subclass with the same signature and return type as an instance method in the superclass overrides the superclass,s method.
                    Overriding method has same name, number & type of parameters and return type .
                    > Method overriding is used for runtime polymorphism
                    > Method overriding is used to provide the specific implementation of the method that is already provided by its super class.
                    
Method Hiding : Method hiding can be defined as, "if a subclass defines a static method with the same signature as a static method in the super class, in such a case, the method in the subclass hides the one in the superclass." The mechanism is known as method hiding. It happens because static methods are resolved at compile time.

****NOTE: Covariant Return Type : The covariant return type specifies that the return type may vary in the same direction as the subclass.An overriding method can also return a subtype of the type returned by the overridden method. This is called as "Covariant return type".
